package prac2;

import java.util.*;

public class Reloj extends javax.swing.JFrame implements Runnable {
    String hora, minutos, segundos, ampm;
    Calendar calendario;
    Thread h1;
    Thread h2;
    Thread h3;
    Thread h4;

    public Reloj() {
        initComponents();
        h1 = new Thread(this);
        h1.start();
        
        h2 = new Thread(this);
        h2.start();
        
        h3 = new Thread(this);
        h3.start();
        
        h4 = new Thread(this);
        h4.start();
        
        setLocationRelativeTo(null);
        setTitle("Reloj");
        setVisible(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblReloj = new javax.swing.JLabel();
        lblRelojUno = new javax.swing.JLabel();
        lblRelojDos = new javax.swing.JLabel();
        lblRelojTres = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 255));

        lblReloj.setFont(new java.awt.Font("Bahnschrift", 2, 12)); // NOI18N
        lblReloj.setText("jLabel1");

        lblRelojUno.setFont(new java.awt.Font("Bahnschrift", 2, 12)); // NOI18N
        lblRelojUno.setText("jLabel1");

        lblRelojDos.setFont(new java.awt.Font("Bahnschrift", 2, 12)); // NOI18N
        lblRelojDos.setText("jLabel2");

        lblRelojTres.setFont(new java.awt.Font("Bahnschrift", 2, 12)); // NOI18N
        lblRelojTres.setText("jLabel1");

        jButton1.setText("jButton1");

        jButton2.setText("jButton2");

        jButton3.setText("jButton3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRelojTres, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblReloj, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblRelojUno, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblRelojDos)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReloj, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addComponent(lblRelojUno)
                .addGap(51, 51, 51)
                .addComponent(lblRelojDos)
                .addGap(49, 49, 49)
                .addComponent(lblRelojTres)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel lblReloj;
    private javax.swing.JLabel lblRelojDos;
    private javax.swing.JLabel lblRelojTres;
    private javax.swing.JLabel lblRelojUno;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        Thread ct = Thread.currentThread();
        Thread ct1 = Thread.currentThread();
        Thread ct2 = Thread.currentThread();
        Thread ct3 = Thread.currentThread();
        
        while(ct==h1){
            calcula();
            lblReloj.setText(hora+":"+minutos+":"+segundos+" "+ampm);
            lblRelojUno.setText(hora+":"+minutos+":"+segundos+" "+ampm);
            try{
                Thread.sleep(1000);
            }catch(InterruptedException e){
                
            }
        }
        
        while(ct1==h2){
            calcula();
            lblReloj.setText(hora+":"+minutos+":"+segundos+" "+ampm);
            lblRelojUno.setText(hora+":"+minutos+":"+segundos+" "+ampm);
            lblRelojDos.setText(hora+":"+minutos+":"+segundos+" "+ampm);
            lblRelojTres.setText(hora+":"+minutos+":"+segundos+" "+ampm);
            try{
                Thread.sleep(1000);
            }catch(InterruptedException e){
                
            }
        }
        
        while(ct2==h3){
            calcula();
            lblReloj.setText(hora+":"+minutos+":"+segundos+" "+ampm);
            lblRelojUno.setText(hora+":"+minutos+":"+segundos+" "+ampm);
            try{
                Thread.sleep(1000);
            }catch(InterruptedException e){
                
            }
        }
        
        while(ct3==h4){
            calcula();
            lblReloj.setText(hora+":"+minutos+":"+segundos+" "+ampm);
            lblRelojUno.setText(hora+":"+minutos+":"+segundos+" "+ampm);
            try{
                Thread.sleep(1000);
            }catch(InterruptedException e){
                
            }
        }
    }

    private void calcula() {
    Calendar calendario = new GregorianCalendar();
    Date fechaHoraActual = new Date();
    
    calendario.setTime(fechaHoraActual);
    ampm= calendario.get(Calendar.AM_PM)==Calendar.AM?"AM":"PM";
    
    if(ampm.equals("PM")){
        int h=calendario.get(Calendar.HOUR_OF_DAY)-12;
        hora = h>9?""+h:"0"+h;
    }else{
        hora = calendario.get(Calendar.HOUR_OF_DAY)>9?""+calendario.get(Calendar.HOUR_OF_DAY):"0"+calendario.get(Calendar.HOUR_OF_DAY);
    }
    minutos = calendario.get(Calendar.MINUTE)>9?""+calendario.get(Calendar.MINUTE):"0"+calendario.get(Calendar.MINUTE);
    segundos = calendario.get(Calendar.SECOND)>9?""+calendario.get(Calendar.SECOND):"0"+calendario.get(Calendar.SECOND);
    }
}
